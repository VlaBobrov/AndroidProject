package com.example.ap.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.ap.api.models.Cake;
import com.example.ap.api.models.History;
import com.example.ap.api.models.Ingredients;

import com.example.ap.dao.CakeDao;
import com.example.ap.dao.HistoryDao;
import com.example.ap.dao.IngredientsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig cakeDaoConfig;
    private final DaoConfig historyDaoConfig;
    private final DaoConfig ingredientsDaoConfig;

    private final CakeDao cakeDao;
    private final HistoryDao historyDao;
    private final IngredientsDao ingredientsDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        cakeDaoConfig = daoConfigMap.get(CakeDao.class).clone();
        cakeDaoConfig.initIdentityScope(type);

        historyDaoConfig = daoConfigMap.get(HistoryDao.class).clone();
        historyDaoConfig.initIdentityScope(type);

        ingredientsDaoConfig = daoConfigMap.get(IngredientsDao.class).clone();
        ingredientsDaoConfig.initIdentityScope(type);

        cakeDao = new CakeDao(cakeDaoConfig, this);
        historyDao = new HistoryDao(historyDaoConfig, this);
        ingredientsDao = new IngredientsDao(ingredientsDaoConfig, this);

        registerDao(Cake.class, cakeDao);
        registerDao(History.class, historyDao);
        registerDao(Ingredients.class, ingredientsDao);
    }
    
    public void clear() {
        cakeDaoConfig.clearIdentityScope();
        historyDaoConfig.clearIdentityScope();
        ingredientsDaoConfig.clearIdentityScope();
    }

    public CakeDao getCakeDao() {
        return cakeDao;
    }

    public HistoryDao getHistoryDao() {
        return historyDao;
    }

    public IngredientsDao getIngredientsDao() {
        return ingredientsDao;
    }

}
